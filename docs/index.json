{"repository_name":"github.com/semlette/hatty","body":"# Hatty [![CircleCI](https://circleci.com/gh/semlette/hatty.svg?style=svg)](https://circleci.com/gh/semlette/hatty)\r\n\r\nA library for creating HTTP services in Crystal\r\n\r\n> WORK IN PROGRESS. Please don't use this in production, it will probably break. I actually don't think it will, but I don't promise anything.\r\n\r\nTo-do\r\n\r\n* [multipart/form-data support](https://github.com/semlette/hatty/tree/formdata)\r\n* websockets\r\n* [Add suggestion](https://github.com/semlette/hatty/issues/new)\r\n\r\n---\r\n\r\n```crystal\r\nrequire \"hatty\"\r\n\r\nget \"/\" do |request, response|\r\n  response.send_text \"Hello there!\"\r\nend\r\n\r\nHatty.start\r\n```\r\n\r\n## Installing\r\n\r\nAdd this snippet to your `shard.yml` file\r\n\r\n```yml\r\ndependencies:\r\n  hatty:\r\n    github: semlette/hatty\r\n```\r\n\r\n## Usage\r\n\r\n```crystal\r\nrequire \"hatty\"\r\n\r\n# Define handlers using `get`, `post`, `put`, `delete` and `patch`\r\n\r\nmodule MyApi\r\n  # Imaginary API\r\n  # ...\r\nend\r\n\r\nget \"/users/:id\" do |request, response|\r\n  user = MyApi.get_user by_id: request.params[\"id\"]\r\n  response.send_json({ data: user })\r\nend\r\n\r\npost \"/users\" do |request, response|\r\n  name = response.body[\"name\"]\r\n  new_user = MyApi.create_user(name)\r\n  response.send_json({ success: true, data: new_user })\r\nend\r\n\r\ndelete \"/users/:id\" do |request, response|\r\n  token = request.headers[\"Authorization\"]?\r\n  is_admin = MyApi.is_admin?(token)\r\n  if is_admin\r\n    MyApi.delete_user by_id: request.params[\"id\"]\r\n    response.send_json({ \"success\" => true })\r\n  else\r\n    # Send status 401 Unauthorized\r\n    response.send_status 401\r\n  end\r\nend\r\n\r\nHatty.start\r\n```\r\n\r\nEvery handler receives a [request](https://semlette.github.io/hatty/Hatty/Request) and a [response](https://semlette.github.io/hatty/Hatty/Response). The request contains information about the request like the [headers](), the [body](https://semlette.github.io/hatty/Hatty/Request#body-instance-method), [url queries]() and [parameters](https://semlette.github.io/hatty/Hatty/Request#params%3AHash%28String%2CString%29-instance-method). The response has properties like the [status code](), [headers](https://semlette.github.io/hatty/Hatty/Response#headers%3AHTTP%3A%3AHeaders-instance-method) and a lot of helper methods for sending stuff back to the client.\r\n\r\n* [All handlers methods](https://semlette.github.io/hatty/toplevel.html)\r\n* [Starting hatty](https://semlette.github.io/hatty/Hatty#start%28port%3D3000%29-class-method)\r\n\r\n### Sending stuff\r\n\r\n```crystal\r\nget \"/\" do |request, response|\r\n  # Note: You can only call `#send...` once\r\n  response.send \"<!DOCTYPE><html><body>I have no Content-Type</body></html>\"\r\n  response.send_text \"I am text/plain\"\r\n  response.send_json({ \"content-type\" => \"application/json\" })\r\n  response.send_status 404\r\nend\r\n```\r\n\r\n[API documentation for `Response`](https://semlette.github.io/hatty/Hatty/Response)\r\n\r\n### Status codes\r\n\r\n#### Setting the status code\r\n\r\n```crystal\r\nget \"/admin\" do |request, response|\r\n  response.status_code = 401\r\n  response.send_text \"Unauthorized.\"\r\nend\r\n```\r\n\r\n#### Using status handlers\r\n\r\nStatus handlers are handlers that respond to a specific status code. When you call `Response#send_status`, the request is passed to the status handler with the same status code. If a handler raises an uncaught error, Hatty sends the request to the `500` status handler. It also passes requests with no handler to the `404` status handler.\r\n\r\n```crystal\r\nget \"/private\" do |request, response|\r\n  response.send_status 404\r\nend\r\n\r\nstatus 404 do |request, response|\r\n  response.send_text \"Oops, file not found. ¯\\_(ツ)_/¯\"\r\nend\r\n```\r\n\r\n#### Global status handler\r\n\r\nInstead of defining a status handler for every status code, you can define a Global Status Handler™. The global status handler will receive all status codes not handled by the status handlers. If you create a status handler for `404` and a global status handler, the global status handler will not receive `404` requests.\r\n\r\n```crystal\r\nstatus do |code, request, response|\r\n  response.send_text \"Oops! Error code #{code}\"\r\nend\r\n```\r\n\r\n[API documentation for `status`](https://semlette.github.io/hatty/toplevel.html#status%28code%2C%26handler%3AHatty%3A%3AHandler%29-class-method)\r\n\r\n[API documentation for `Response#send_status`](https://semlette.github.io/hatty/Hatty/Response#send_status%28status_code%29%3ANil-instance-method)\r\n\r\n## Testing\r\n\r\nHatty comes with a testing module which helps you test your routes. Inspired by [spec-kemal](https://github.com/kemalcr/spec-kemal), requiring `hatty/testing` imports methods that allows you to test your routes.\r\n\r\nMethods\r\n\r\n* [`get`](https://semlette.github.io/hatty/toplevel#get%28resource%2Cheaders%3AHTTP%3A%3AHeaders%3F%3Dnil%2Cbody%3AString%3F%3Dnil%29%3AHatty%3A%3ATesting%3A%3AResponse-class-method)\r\n* [`post`](https://semlette.github.io/hatty/toplevel#post%28resource%2Cheaders%3AHTTP%3A%3AHeaders%3F%3Dnil%2Cbody%3AString%3F%3Dnil%29%3AHatty%3A%3ATesting%3A%3AResponse-class-method)\r\n* [`put`](https://semlette.github.io/hatty/toplevel#put%28resource%2Cheaders%3AHTTP%3A%3AHeaders%3F%3Dnil%2Cbody%3AString%3F%3Dnil%29%3AHatty%3A%3ATesting%3A%3AResponse-class-method)\r\n* [`delete`](https://semlette.github.io/hatty/toplevel#delete%28resource%2Cheaders%3AHTTP%3A%3AHeaders%3F%3Dnil%2Cbody%3AString%3F%3Dnil%29%3AHatty%3A%3ATesting%3A%3AResponse-class-method)\r\n* [`patch`](https://semlette.github.io/hatty/toplevel#patch%28resource%2Cheaders%3AHTTP%3A%3AHeaders%3F%3Dnil%2Cbody%3AString%3F%3Dnil%29%3AHatty%3A%3ATesting%3A%3AResponse-class-method)\r\n\r\n**`app.cr`**\r\n\r\n```crystal\r\nrequire \"hatty\"\r\n\r\nget \"/api\" do |request, response|\r\n  response.send_json({ \"data\" => \"insert data here\" })\r\nend\r\n\r\nHatty.start\r\n```\r\n\r\n**`app_spec.cr`**\r\n\r\n```crystal\r\nrequire \"./app\"\r\nrequire \"hatty/testing\"\r\n\r\ndescribe \"GET /api\" do\r\n  it \"returns json\" do\r\n    #         `get` along with other methods are provided by `hatty/testing`\r\n    response = get \"/api\"\r\n\r\n    response.status_code.should eq 200\r\n    response.json?.should be_true\r\n  end\r\nend\r\n```\r\n","program":{"html_id":"github.com/semlette/hatty/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/semlette/hatty","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"delete(path,&handler:Hatty::Handler)-class-method","html_id":"delete(path,&amp;handler:Hatty::Handler)-class-method","name":"delete","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &handler : Hatty::Handler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L32","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L32","def":{"name":"delete","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"Hatty::Handler"},"return_type":"","visibility":"Public","body":"Hatty::Router.register(path)\nHatty::Router.add_route(\"DELETE\", path, handler)\n"}},{"id":"delete(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","html_id":"delete(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","name":"delete","doc":"Sends a `DELETE` requests for *resource*.\nNOTE: Only available by importing `hatty/testing`.\n```\ndelete \"/\" do |request, response|\n  response.send_status 401\nend\nresponse = delete \"/\"\nresponse.status_code # -> 401\n```","summary":"<p>Sends a <code>DELETE</code> requests for <em>resource</em>.</p>","abstract":false,"args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(resource, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>) : Hatty::Testing::Response","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L90","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L90","def":{"name":"delete","args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hatty::Testing::Response","visibility":"Public","body":"create_test_response(\"DELETE\", resource, headers, body)"}},{"id":"get(path:String,&handler:Hatty::Handler)-class-method","html_id":"get(path:String,&amp;handler:Hatty::Handler)-class-method","name":"get","doc":"Listen for `GET` requests on *path*.\n\nExample: Imaginary \"get user\" endpoint.\n```\nget \"/api/users/:id\" do |request, response|\n  user = MyApi.get_user_by_id(request.params[\"id\"])\n  response.send_json({ data: user })\nend","summary":"<p>Listen for <code>GET</code> requests on <em>path</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String, &handler : Hatty::Handler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L9","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L9","def":{"name":"get","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"Hatty::Handler"},"return_type":"","visibility":"Public","body":"Hatty::Router.register(path)\nHatty::Router.add_route(\"GET\", path, handler)\n"}},{"id":"get(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","html_id":"get(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","name":"get","doc":"Sends a `GET` requests for *resource*.\nNOTE: Only available by importing `hatty/testing`.\n```\nget \"/\" do |request, response|\n  response.send_status 401\nend\nresponse = get \"/\"\nresponse.status_code # -> 401\n```","summary":"<p>Sends a <code>GET</code> requests for <em>resource</em>.</p>","abstract":false,"args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(resource, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>) : Hatty::Testing::Response","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L64","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L64","def":{"name":"get","args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hatty::Testing::Response","visibility":"Public","body":"create_test_response(\"GET\", resource, headers, body)"}},{"id":"patch(path,&handler:Hatty::Handler)-class-method","html_id":"patch(path,&amp;handler:Hatty::Handler)-class-method","name":"patch","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &handler : Hatty::Handler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L37","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L37","def":{"name":"patch","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"Hatty::Handler"},"return_type":"","visibility":"Public","body":"Hatty::Router.register(path)\nHatty::Router.add_route(\"PATCH\", path, handler)\n"}},{"id":"patch(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","html_id":"patch(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","name":"patch","doc":"Sends a `PATCH` requests for *resource*.\nNOTE: Only available by importing `hatty/testing`.\n```\npatch \"/\" do |request, response|\n  response.send_status 401\nend\nresponse = patch \"/\"\nresponse.status_code # -> 401\n```","summary":"<p>Sends a <code>PATCH</code> requests for <em>resource</em>.</p>","abstract":false,"args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(resource, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>) : Hatty::Testing::Response","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L116","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L116","def":{"name":"patch","args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hatty::Testing::Response","visibility":"Public","body":"create_test_response(\"PATCH\", resource, headers, body)"}},{"id":"post(path:String,&handler:Hatty::Handler)-class-method","html_id":"post(path:String,&amp;handler:Hatty::Handler)-class-method","name":"post","doc":"Listen for `POST` requests at *path*.\n\nExample: Imaginary \"create user\" endpoint.\n```\npost \"/api/users\" do |request, response|\n  user = MyApi.create_user(request.body.user)\n  response.send_json({ data: user })\nend","summary":"<p>Listen for <code>POST</code> requests at <em>path</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String, &handler : Hatty::Handler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L22","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L22","def":{"name":"post","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"Hatty::Handler"},"return_type":"","visibility":"Public","body":"Hatty::Router.register(path)\nHatty::Router.add_route(\"POST\", path, handler)\n"}},{"id":"post(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","html_id":"post(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","name":"post","doc":"Sends a `POST` requests for *resource*.\nNOTE: Only available by importing `hatty/testing`.\n```\npost \"/\" do |request, response|\n  response.send_status 401\nend\nresponse = post \"/\"\nresponse.status_code # -> 401\n```","summary":"<p>Sends a <code>POST</code> requests for <em>resource</em>.</p>","abstract":false,"args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(resource, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>) : Hatty::Testing::Response","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L77","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L77","def":{"name":"post","args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hatty::Testing::Response","visibility":"Public","body":"create_test_response(\"POST\", resource, headers, body)"}},{"id":"put(path,&handler:Hatty::Handler)-class-method","html_id":"put(path,&amp;handler:Hatty::Handler)-class-method","name":"put","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path, &handler : Hatty::Handler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L27","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L27","def":{"name":"put","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"Hatty::Handler"},"return_type":"","visibility":"Public","body":"Hatty::Router.register(path)\nHatty::Router.add_route(\"PUT\", path, handler)\n"}},{"id":"put(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","html_id":"put(resource,headers:HTTP::Headers?=nil,body:String?=nil):Hatty::Testing::Response-class-method","name":"put","doc":"Sends a `PUT` requests for *resource*.\nNOTE: Only available by importing `hatty/testing`.\n```\nput \"/\" do |request, response|\n  response.send_status 401\nend\nresponse = put \"/\"\nresponse.status_code # -> 401\n```","summary":"<p>Sends a <code>PUT</code> requests for <em>resource</em>.</p>","abstract":false,"args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"args_string":"(resource, headers : HTTP::Headers? = <span class=\"n\">nil</span>, body : String? = <span class=\"n\">nil</span>) : Hatty::Testing::Response","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L103","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L103","def":{"name":"put","args":[{"name":"resource","doc":null,"default_value":"","external_name":"resource","restriction":""},{"name":"headers","doc":null,"default_value":"nil","external_name":"headers","restriction":"HTTP::Headers | ::Nil"},{"name":"body","doc":null,"default_value":"nil","external_name":"body","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hatty::Testing::Response","visibility":"Public","body":"create_test_response(\"PUT\", resource, headers, body)"}},{"id":"status(code,&handler:Hatty::Handler)-class-method","html_id":"status(code,&amp;handler:Hatty::Handler)-class-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""}],"args_string":"(code, &handler : Hatty::Handler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L42","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L42","def":{"name":"status","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"Hatty::Handler"},"return_type":"","visibility":"Public","body":"Hatty::Router.add_route(code, handler)"}},{"id":"status(&handler:Hatty::GlobalStatusHandler)-class-method","html_id":"status(&amp;handler:Hatty::GlobalStatusHandler)-class-method","name":"status","doc":"This creates a \"global status handler\". This is like a status code handler,\nbut receives all unhandled status codes.\nNOTE: This can only be used once.\n\n```\nget \"/unhandled\" do |request, response|\n  response.send_status 410\nend\n\nstatus do |code, request, response|\n  response.send_text \"Code: #{code}\"\nend\n\n# GET /unhandled\n# > \"Code: 410\"\n```","summary":"<p>This creates a \"global status handler\".</p>","abstract":false,"args":[],"args_string":"(&handler : Hatty::GlobalStatusHandler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L62","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/routing.cr#L62","def":{"name":"status","args":[],"double_splat":null,"splat_index":null,"yields":0,"block_arg":{"name":"handler","doc":null,"default_value":"","external_name":"handler","restriction":"Hatty::GlobalStatusHandler"},"return_type":"","visibility":"Public","body":"Hatty::Router.global_status_handler = handler"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/semlette/hatty/Hatty","path":"Hatty.html","kind":"module","full_name":"Hatty","name":"Hatty","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"hatty/config.cr","line_number":1,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr"},{"filename":"hatty/handlers.cr","line_number":1,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers.cr"},{"filename":"hatty/request.cr","line_number":1,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr"},{"filename":"hatty/response.cr","line_number":1,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr"},{"filename":"hatty/router.cr","line_number":1,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/router.cr"},{"filename":"hatty/server.cr","line_number":1,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr"},{"filename":"hatty.cr","line_number":8,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"config-class-method","html_id":"config-class-method","name":"config","doc":"Returns Hatty's configuration.\n```\nHatty.config.disable_powered_by = true","summary":"<p>Returns Hatty's configuration.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L18","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L18","def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Config::INSTANCE"}},{"id":"configure(&block)-class-method","html_id":"configure(&amp;block)-class-method","name":"configure","doc":"Calls the block with Hatty's configuration.\n```\nHatty.configure do |config|\n  config.disable_powered_by = true\nend\n```","summary":"<p>Calls the block with Hatty's configuration.</p>","abstract":false,"args":[],"args_string":"(&block)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L28","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L28","def":{"name":"configure","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"yield Config::INSTANCE"}},{"id":"start(port=3000)-class-method","html_id":"start(port=3000)-class-method","name":"start","doc":"Starts Hatty.\nThis is a \"shortcut\" for running\n```\nserver = Hatty::Server.new(port: 3000)\nserver.start\n```","summary":"<p>Starts Hatty.</p>","abstract":false,"args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":""}],"args_string":"(port = <span class=\"n\">3000</span>)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L38","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L38","def":{"name":"start","args":[{"name":"port","doc":null,"default_value":"3000","external_name":"port","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"server = Server.new(port)\nserver.start\nserver\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/semlette/hatty/Hatty/Configuration","path":"Hatty/Configuration.html","kind":"class","full_name":"Hatty::Configuration","name":"Configuration","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/config.cr","line_number":2,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"disable_logging:Bool-instance-method","html_id":"disable_logging:Bool-instance-method","name":"disable_logging","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L7","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L7","def":{"name":"disable_logging","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@disable_logging"}},{"id":"disable_logging=(disable_logging:Bool)-instance-method","html_id":"disable_logging=(disable_logging:Bool)-instance-method","name":"disable_logging=","doc":null,"summary":null,"abstract":false,"args":[{"name":"disable_logging","doc":null,"default_value":"","external_name":"disable_logging","restriction":"Bool"}],"args_string":"(disable_logging : Bool)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L7","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L7","def":{"name":"disable_logging=","args":[{"name":"disable_logging","doc":null,"default_value":"","external_name":"disable_logging","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@disable_logging = disable_logging"}},{"id":"disable_powered_by:Bool-instance-method","html_id":"disable_powered_by:Bool-instance-method","name":"disable_powered_by","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L4","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L4","def":{"name":"disable_powered_by","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@disable_powered_by"}},{"id":"disable_powered_by=(disable_powered_by:Bool)-instance-method","html_id":"disable_powered_by=(disable_powered_by:Bool)-instance-method","name":"disable_powered_by=","doc":null,"summary":null,"abstract":false,"args":[{"name":"disable_powered_by","doc":null,"default_value":"","external_name":"disable_powered_by","restriction":"Bool"}],"args_string":"(disable_powered_by : Bool)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L4","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/config.cr#L4","def":{"name":"disable_powered_by=","args":[{"name":"disable_powered_by","doc":null,"default_value":"","external_name":"disable_powered_by","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@disable_powered_by = disable_powered_by"}}],"macros":[],"types":[]},{"html_id":"github.com/semlette/hatty/Hatty/GlobalStatusHandler","path":"Hatty/GlobalStatusHandler.html","kind":"alias","full_name":"Hatty::GlobalStatusHandler","name":"GlobalStatusHandler","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"hatty/handlers.cr","line_number":3,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":true,"aliased":"Proc(Int32, Hatty::Request, Hatty::Response, Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/semlette/hatty/Hatty/Handler","path":"Hatty/Handler.html","kind":"alias","full_name":"Hatty::Handler","name":"Handler","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"hatty/handlers.cr","line_number":2,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":true,"aliased":"Proc(Hatty::Request, Hatty::Response, Nil)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/semlette/hatty/Hatty/Handlers","path":"Hatty/Handlers.html","kind":"module","full_name":"Hatty::Handlers","name":"Handlers","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"hatty/handlers/logger.cr","line_number":3,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/logger.cr"},{"filename":"hatty/handlers/routing.cr","line_number":1,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/routing.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/semlette/hatty/Hatty/Handlers/Logging","path":"Hatty/Handlers/Logging.html","kind":"class","full_name":"Hatty::Handlers::Logging","name":"Logging","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/semlette/hatty/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/handlers/logger.cr","line_number":4,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/logger.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/semlette/hatty/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty/Handlers","kind":"module","full_name":"Hatty::Handlers","name":"Handlers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/logger.cr#L8","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/logger.cr#L8","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if Hatty.config.disable_logging\nelse\n  path = context.request.path\n  method = context.request.method\n  @@logger.info(\"#{method} #{path}\")\nend\ncall_next(context)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/semlette/hatty/Hatty/Handlers/Routing","path":"Hatty/Handlers/Routing.html","kind":"class","full_name":"Hatty::Handlers::Routing","name":"Routing","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/semlette/hatty/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"},{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/handlers/routing.cr","line_number":2,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/routing.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/semlette/hatty/HTTP/Handler","kind":"module","full_name":"HTTP::Handler","name":"Handler"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty/Handlers","kind":"module","full_name":"Hatty::Handlers","name":"Handlers"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"call(context)-instance-method","html_id":"call(context)-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"args_string":"(context)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/routing.cr#L5","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/handlers/routing.cr#L5","def":{"name":"call","args":[{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if context.request.version.includes?(\"HTTP\")\nelse\n  call_next(context)\n  return\nend\npath = context.request.path\nmethod = context.request.method\nrequest = Request.new(context.request)\nresponse = Response.new(context.response)\nbegin\n  handler = Router.get_handler(method, path)\n  handler.call(request, response)\n  if response.hatty_send_status_code\n    Router.send_status(response.status_code, request, response)\n  end\nrescue error : Router::NotFoundError\n  Router.send_status(404, request, response)\nrescue error\n  Router.send_status(500, request, response)\n  context.response.close\n  raise(error)\nend\n"}}],"macros":[],"types":[]}]},{"html_id":"github.com/semlette/hatty/Hatty/Request","path":"Hatty/Request.html","kind":"class","full_name":"Hatty::Request","name":"Request","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/request.cr","line_number":2,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(request:HTTP::Request)-class-method","html_id":"new(request:HTTP::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"args_string":"(request : HTTP::Request)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L14","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L14","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body(mappings)-instance-method","html_id":"body(mappings)-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[{"name":"mappings","doc":null,"default_value":"","external_name":"mappings","restriction":""}],"args_string":"(mappings)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L36","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L36","def":{"name":"body","args":[{"name":"mappings","doc":null,"default_value":"","external_name":"mappings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"is_json = @request.headers[\"Content-Type\"]? === \"application/json\"\nif @request.body && is_json\n  mappings.from_json(@request.body.not_nil!)\nend\n"}},{"id":"body:JSON::Any?-instance-method","html_id":"body:JSON::Any?-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSON::Any?","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L26","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L26","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::Any | ::Nil","visibility":"Public","body":"is_json = @request.headers[\"Content-Type\"]? === \"application/json\"\nif ((!@parsed_body) && @request.body) && is_json\n  @parsed_body = true\n  @body = JSON.parse(@request.body.not_nil!)\nelse\n  if @parsed_body\n    @body\n  end\nend\n"}},{"id":"files:Hash(String,Tempfile)?-instance-method","html_id":"files:Hash(String,Tempfile)?-instance-method","name":"files","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Tempfile)?","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L55","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L55","def":{"name":"files","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Tempfile) | ::Nil","visibility":"Public","body":"is_formdata = @request.headers[\"Content-Type\"].starts_with?(\"multipart/form-data\")\nif ((!@parsed_files) && @request.body) && is_formdata\n  parse_files\n  @files\nelse\n  if @parsed_files\n    @files\n  else\n    nil\n  end\nend\n"}},{"id":"form:Hash(String,String)?-instance-method","html_id":"form:Hash(String,String)?-instance-method","name":"form","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)?","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L43","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L43","def":{"name":"form","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"is_formdata = @request.headers[\"Content-Type\"].starts_with?(\"multipart/form-data\")\nif ((!@parsed_form) && @request.body) && is_formdata\n  parse_form\n  @form\nelse\n  if @parsed_form\n    @form\n  else\n    nil\n  end\nend\n"}},{"id":"method-instance-method","html_id":"method-instance-method","name":"method","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L22","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L22","def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request.method"}},{"id":"original:HTTP::Request-instance-method","html_id":"original:HTTP::Request-instance-method","name":"original","doc":"Returns the original request","summary":"<p>Returns the original request</p>","abstract":false,"args":[],"args_string":" : HTTP::Request","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L18","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L18","def":{"name":"original","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Request","visibility":"Public","body":"@request"}},{"id":"parameters:Hash(String,String)-instance-method","html_id":"parameters:Hash(String,String)-instance-method","name":"parameters","doc":"Alias for `#params`","summary":"<p>Alias for <code><a href=\"../Hatty/Request.html#params%3AHash%28String%2CString%29-instance-method\">#params</a></code></p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L119","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L119","def":{"name":"parameters","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"params"}},{"id":"params:Hash(String,String)-instance-method","html_id":"params:Hash(String,String)-instance-method","name":"params","doc":"Returns a hash with the url parameters.\n```\nget \"/users/:id\" do |request, response|\n  puts response.params[\"id\"]\nend\n\n# GET /users/3\n# > \"3\"\n```","summary":"<p>Returns a hash with the url parameters.</p>","abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L109","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L109","def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"if !@parsed_params\n  tree_path = Router.tree.find(@request.path)\n  @params = tree_path.params\nend\n@params\n"}},{"id":"path-instance-method","html_id":"path-instance-method","name":"path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L123","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L123","def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request.path"}},{"id":"query:Hash(String,String)-instance-method","html_id":"query:Hash(String,String)-instance-method","name":"query","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L89","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L89","def":{"name":"query","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, String)","visibility":"Public","body":"if (!@parsed_query) && @request.query\n  params = HTTP::Params.parse(@request.query.not_nil!)\n  params.each do |key, value|\n    @query[key] = value\n  end\nend\n@query\n"}},{"id":"url-instance-method","html_id":"url-instance-method","name":"url","doc":"Alias for `#path`","summary":"<p>Alias for <code><a href=\"../Hatty/Request.html#path-instance-method\">#path</a></code></p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L128","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/request.cr#L128","def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"path"}}],"macros":[],"types":[]},{"html_id":"github.com/semlette/hatty/Hatty/Response","path":"Hatty/Response.html","kind":"class","full_name":"Hatty::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/response.cr","line_number":2,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(response:HTTP::Server::Response)-class-method","html_id":"new(response:HTTP::Server::Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"HTTP::Server::Response"}],"args_string":"(response : HTTP::Server::Response)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L3","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L3","def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"HTTP::Server::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"hatty_send_status_code:Bool-instance-method","html_id":"hatty_send_status_code:Bool-instance-method","name":"hatty_send_status_code","doc":"NOTE: INTERNAL PROPERTY.\nThis property tells Hatty if it should forward the request\nto a status handler.","summary":"<p><span class=\"flag purple\">NOTE</span>  INTERNAL PROPERTY.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L108","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L108","def":{"name":"hatty_send_status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@hatty_send_status_code"}},{"id":"hatty_sent:Bool-instance-method","html_id":"hatty_sent:Bool-instance-method","name":"hatty_sent","doc":"NOTE: INTERNAL PROPERTY.\nThis property tells Hatty if the response has been used.","summary":"<p><span class=\"flag purple\">NOTE</span>  INTERNAL PROPERTY.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L114","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L114","def":{"name":"hatty_sent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@sent"}},{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Headers","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L24","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L24","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Headers","visibility":"Public","body":"@response.headers"}},{"id":"original:HTTP::Server::Response-instance-method","html_id":"original:HTTP::Server::Response-instance-method","name":"original","doc":"Returns the original response","summary":"<p>Returns the original response</p>","abstract":false,"args":[],"args_string":" : HTTP::Server::Response","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L11","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L11","def":{"name":"original","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Server::Response","visibility":"Public","body":"@response"}},{"id":"send(response):Nil-instance-method","html_id":"send(response):Nil-instance-method","name":"send","doc":"Sends the *response* \"as-is\" to the client.\n```\nget \"/\" do |request, response|\n  response.send \"Hellooo!\"\nend\n```","summary":"<p>Sends the <em>response</em> \"as-is\" to the client.</p>","abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"args_string":"(response) : Nil","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L34","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L34","def":{"name":"send","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"if @sent\n  raise(ExhaustedError.new)\nend\n@response.print(response)\n@sent = true\n"}},{"id":"send_json(json:String):Nil-instance-method","html_id":"send_json(json:String):Nil-instance-method","name":"send_json","doc":"Sends the *response* as `application/json` to the client.","summary":"<p>Sends the <em>response</em> as <code>application/json</code> to the client.</p>","abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"args_string":"(json : String) : Nil","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L58","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L58","def":{"name":"send_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@response.content_type = \"application/json\"\nsend(json)\n"}},{"id":"send_json(jsonjsonable):Nil-instance-method","html_id":"send_json(jsonjsonable):Nil-instance-method","name":"send_json","doc":"Sends the *response* as `application/json` to the client.\nNOTE: The *response* must have a `#to_json` method. Hatty automatically requires the JSON module which adds such method to `Hash`, `NamedTuple` and others.\n```\nget \"/\" do |request, response|\n  json = {hello: \"world\"}\n  response.send_json(json)\nend\n```\nThe client receives\n```json\n{\"hello\": \"world\"}\n```","summary":"<p>Sends the <em>response</em> as <code>application/json</code> to the client.</p>","abstract":false,"args":[{"name":"jsonable","doc":null,"default_value":"","external_name":"json","restriction":""}],"args_string":"(json jsonable) : Nil","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L52","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L52","def":{"name":"send_json","args":[{"name":"jsonable","doc":null,"default_value":"","external_name":"json","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@response.content_type = \"application/json\"\nsend(jsonable.to_json)\n"}},{"id":"send_status(status_code):Nil-instance-method","html_id":"send_status(status_code):Nil-instance-method","name":"send_status","doc":"Forwards the request to the status handlers.\n\nExample: Imaginary admin page with authorization\n```\nget \"/admin\" do |request, response|\n  authorized = MyApi.valid_token?(request.headers[\"Authorization\"]?)\n  if !authorized\n    response.send_status 401\n    next\n  end\n  # ...\nend\n\n# `Response#send_status 401` forwards the request to this handler\nstatus 401 do |request, response|\n  response.send_text \"ERR! Unauthorized.\"\nend\n```\n","summary":"<p>Forwards the request to the status handlers.</p>","abstract":false,"args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":""}],"args_string":"(status_code) : Nil","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L97","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L97","def":{"name":"send_status","args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@status_code = status_code\nif @sent\n  raise(ExhaustedError.new)\nend\nif @hatty_send_status_code\n  raise(ExhaustedError.new)\nend\n@hatty_send_status_code = true\n"}},{"id":"send_text(text):Nil-instance-method","html_id":"send_text(text):Nil-instance-method","name":"send_text","doc":"Sends the *text* as `text/plain` to the client.\n```\nget \"/\" do |request, response|\n  response.send_text \"FeelsGoodMan\"\nend\n```\nThe client receives\n```text\nFeelsGoodMan\n```","summary":"<p>Sends the <em>text</em> as <code>text/plain</code> to the client.</p>","abstract":false,"args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"args_string":"(text) : Nil","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L73","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L73","def":{"name":"send_text","args":[{"name":"text","doc":null,"default_value":"","external_name":"text","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@response.content_type = \"text/plain\"\nsend(text)\n"}},{"id":"status_code:Int32-instance-method","html_id":"status_code:Int32-instance-method","name":"status_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L15","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L15","def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@status_code"}},{"id":"status_code=(code)-instance-method","html_id":"status_code=(code)-instance-method","name":"status_code=","doc":null,"summary":null,"abstract":false,"args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""}],"args_string":"(code)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L19","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L19","def":{"name":"status_code=","args":[{"name":"code","doc":null,"default_value":"","external_name":"code","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@status_code = code\n@response.status_code = code\n"}}],"macros":[],"types":[{"html_id":"github.com/semlette/hatty/Hatty/Response/ExhaustedError","path":"Hatty/Response/ExhaustedError.html","kind":"class","full_name":"Hatty::Response::ExhaustedError","name":"ExhaustedError","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/semlette/hatty/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/response.cr","line_number":118,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty/Response","kind":"class","full_name":"Hatty::Response","name":"Response"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L119","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/response.cr#L119","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/semlette/hatty/Hatty/Server","path":"Hatty/Server.html","kind":"class","full_name":"Hatty::Server","name":"Server","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/server.cr","line_number":3,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr"},{"filename":"hatty/testing/testing.cr","line_number":47,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":"Basically `HTTP::Server` but with routing.","summary":"<p>Basically <code>HTTP::Server</code> but with routing.</p>","class_methods":[],"constructors":[{"id":"new(port:Int32)-class-method","html_id":"new(port:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"args_string":"(port : Int32)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L7","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L7","def":{"name":"new","args":[{"name":"port","doc":null,"default_value":"","external_name":"port","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(port)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"handlers:Array(HTTP::Handler)-instance-method","html_id":"handlers:Array(HTTP::Handler)-instance-method","name":"handlers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HTTP::Handler)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L18","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L18","def":{"name":"handlers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handlers"}},{"id":"native:HTTP::Server-instance-method","html_id":"native:HTTP::Server-instance-method","name":"native","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Server","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L14","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L14","def":{"name":"native","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@server"}},{"id":"start-instance-method","html_id":"start-instance-method","name":"start","doc":"Starts Hatty.","summary":"<p>Starts Hatty.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L48","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/testing.cr#L48","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"TestServer.server = self"}},{"id":"stop-instance-method","html_id":"stop-instance-method","name":"stop","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L27","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/server.cr#L27","def":{"name":"stop","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@server.close"}}],"macros":[],"types":[]},{"html_id":"github.com/semlette/hatty/Hatty/Testing","path":"Hatty/Testing.html","kind":"module","full_name":"Hatty::Testing","name":"Testing","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"hatty/testing/response.cr","line_number":3,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty","kind":"module","full_name":"Hatty","name":"Hatty"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/semlette/hatty/Hatty/Testing/Response","path":"Hatty/Testing/Response.html","kind":"class","full_name":"Hatty::Testing::Response","name":"Response","abstract":false,"superclass":{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/semlette/hatty/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/semlette/hatty/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"hatty/testing/response.cr","line_number":3,"url":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr"}],"repository_name":"github.com/semlette/hatty","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/semlette/hatty/Hatty/Testing","kind":"module","full_name":"Hatty::Testing","name":"Testing"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(request:HTTP::Client::Response)-class-method","html_id":"new(request:HTTP::Client::Response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Client::Response"}],"args_string":"(request : HTTP::Client::Response)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L4","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L4","def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"HTTP::Client::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body:String-instance-method","html_id":"body:String-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L19","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L19","def":{"name":"body","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@request.body"}},{"id":"headers-instance-method","html_id":"headers-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L15","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L15","def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request.headers"}},{"id":"json(mappings)-instance-method","html_id":"json(mappings)-instance-method","name":"json","doc":null,"summary":null,"abstract":false,"args":[{"name":"mappings","doc":null,"default_value":"","external_name":"mappings","restriction":""}],"args_string":"(mappings)","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L29","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L29","def":{"name":"json","args":[{"name":"mappings","doc":null,"default_value":"","external_name":"mappings","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if json?\n  mappings.from_json(body)\nend"}},{"id":"json:JSON::Any?-instance-method","html_id":"json:JSON::Any?-instance-method","name":"json","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : JSON::Any?","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L23","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L23","def":{"name":"json","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"JSON::Any | ::Nil","visibility":"Public","body":"if json?\n  JSON.parse(body)\nend"}},{"id":"json?:Bool-instance-method","html_id":"json?:Bool-instance-method","name":"json?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L35","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L35","def":{"name":"json?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@request.headers[\"Content-Type\"]? == \"application/json\""}},{"id":"original:HTTP::Client::Response-instance-method","html_id":"original:HTTP::Client::Response-instance-method","name":"original","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client::Response","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L7","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L7","def":{"name":"original","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HTTP::Client::Response","visibility":"Public","body":"@request"}},{"id":"status_code-instance-method","html_id":"status_code-instance-method","name":"status_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L11","source_link":"https://github.com/semlette/hatty/blob/003eb748345b7a278e289ffb463f367b6c27ca57/src/hatty/testing/response.cr#L11","def":{"name":"status_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request.status_code"}}],"macros":[],"types":[]}]}]}]}}